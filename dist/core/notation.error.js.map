{"version":3,"sources":["../../src/core/notation.error.js"],"names":["setProto","Object","setPrototypeOf","NotationError","message","prototype","defineProperty","enumerable","writable","value","Error","hasOwnProperty","captureStackTrace","stack"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA,IAAMA,QAAQ,GAAGC,MAAM,CAACC,cAAxB;AAEA;;;;;;;;IAOMC,a;;;;;AAEF;;;;;AAKA,2BAA0B;AAAA;;AAAA,QAAdC,OAAc,uEAAJ,EAAI;;AAAA;;AACtB,uFAAMA,OAAN;AACAJ,IAAAA,QAAQ,gCAAOG,aAAa,CAACE,SAArB,CAAR;AAEAJ,IAAAA,MAAM,CAACK,cAAP,gCAA4B,MAA5B,EAAoC;AAChCC,MAAAA,UAAU,EAAE,KADoB;AAEhCC,MAAAA,QAAQ,EAAE,KAFsB;AAGhCC,MAAAA,KAAK,EAAE;AAHyB,KAApC;AAMAR,IAAAA,MAAM,CAACK,cAAP,gCAA4B,SAA5B,EAAuC;AACnCC,MAAAA,UAAU,EAAE,KADuB;AAEnCC,MAAAA,QAAQ,EAAE,IAFyB;AAGnCC,MAAAA,KAAK,EAAEL;AAH4B,KAAvC;AAMA;;AACA,QAAIM,KAAK,CAACC,cAAN,CAAqB,mBAArB,CAAJ,EAA+C;AAAE;AAC7CD,MAAAA,KAAK,CAACE,iBAAN,gCAA8BT,aAA9B;AACH,KAFD,MAEO;AACHF,MAAAA,MAAM,CAACK,cAAP,gCAA4B,OAA5B,EAAqC;AACjCC,QAAAA,UAAU,EAAE,KADqB;AAEjCC,QAAAA,QAAQ,EAAE,KAFuB;AAGjCC,QAAAA,KAAK,EAAG,IAAIC,KAAJ,CAAUN,OAAV,CAAD,CAAqBS;AAHK,OAArC;AAKH;;AAzBqB;AA0BzB;;;mBAjCuBH,K;;eAqCbP,a","sourcesContent":["/* eslint consistent-this:0, no-prototype-builtins:0 */\n\nconst setProto = Object.setPrototypeOf;\n\n/**\n *  Error class specific to `Notation`.\n *  @name Notation.Error\n *  @memberof! Notation\n *  @class\n *\n */\nclass NotationError extends Error {\n\n    /**\n     *  Initializes a new `Notation.Error` instance.\n     *  @constructs Notation.Error\n     *  @param {String} message - The error message.\n     */\n    constructor(message = '') {\n        super(message);\n        setProto(this, NotationError.prototype);\n\n        Object.defineProperty(this, 'name', {\n            enumerable: false,\n            writable: false,\n            value: 'NotationError'\n        });\n\n        Object.defineProperty(this, 'message', {\n            enumerable: false,\n            writable: true,\n            value: message\n        });\n\n        /* istanbul ignore else */\n        if (Error.hasOwnProperty('captureStackTrace')) { // V8\n            Error.captureStackTrace(this, NotationError);\n        } else {\n            Object.defineProperty(this, 'stack', {\n                enumerable: false,\n                writable: false,\n                value: (new Error(message)).stack\n            });\n        }\n    }\n\n}\n\nexport default NotationError;\n"],"file":"notation.error.js"}